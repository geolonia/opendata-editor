name: Build & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Build the app
        run: NODE_ENV=gh-pages npm run build

      - name: Test
        run: npm test

      - name: Type check & lint
        run: npm run lint

      - uses: actions/upload-artifact@v3
        if: github.event_name == 'release'
        with:
          name: web
          path: ./modules/geolonia.github.io/dist/

      - uses: actions/upload-artifact@v3
        if: github.event_name == 'release'
        with:
          name: lib
          path: |
            ./modules/opendata-editor/
            !./node_modules/**/*
            !./modules/opendata-editor/node_modules/**/*

  deploy:
    needs:
      - build
    if: github.event_name == 'release'

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    # Allow one concurrent deployment
    concurrency:
      group: "pages"
      cancel-in-progress: true

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: web
          path: ./modules/geolonia.github.io/dist/

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./modules/geolonia.github.io/dist/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  publish:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: lib
          path: ./modules/opendata-editor/
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: set npm auth token
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - run: npm run release
